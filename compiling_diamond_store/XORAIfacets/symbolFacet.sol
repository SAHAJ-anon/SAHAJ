// SPDX-License-Identifier: MIT
/**
â–€â–„â–€â€ƒâ–ˆâ–€â–ˆâ€ƒâ–ˆâ–€â–ˆâ€ƒ â€ƒâ–„â–€â–ˆâ€ƒâ–ˆâ€ƒ â€ƒâ–ˆâ–€â–€â€ƒâ–ˆâ–‘â–ˆâ€ƒâ–„â–€â–ˆâ€ƒâ–ˆâ€ƒâ–ˆâ–„â–‘â–ˆ
â–ˆâ–‘â–ˆâ€ƒâ–ˆâ–„â–ˆâ€ƒâ–ˆâ–€â–„â€ƒ â€ƒâ–ˆâ–€â–ˆâ€ƒâ–ˆâ€ƒ â€ƒâ–ˆâ–„â–„â€ƒâ–ˆâ–€â–ˆâ€ƒâ–ˆâ–€â–ˆâ€ƒâ–ˆâ€ƒâ–ˆâ–‘â–€â–ˆ
ðŸ›  Building your AI-powered home base for Web3
ðŸ”® Enabled by #AI Oracle + #LLM Layer
ðŸ¤– Personalized via DeFi Lens + AI Agents
â›“ Secured w/ Trustworthy Proofs

https://www.xorai.org
https://app.xorai.org
https://docs.xorai.org

https://t.me/xoraichain_org
https://twitter.com/xoraichain_org
**/

pragma solidity 0.8.19;
import "./TestLib.sol";
contract symbolFacet is Ownable {
    using SafeMath for uint256;

    modifier lockTheSwap() {
        TestLib.TestStorage storage ds = TestLib.diamondStorage();
        ds.inSwap = true;
        _;
        ds.inSwap = false;
    }

    function symbol() public pure returns (string memory) {
        return _symbol;
    }
}
